
* tail call optimization
** code
  - https://github.com/Bogdanp/tcopy/tree/master/tcopy
  - http://code.activestate.com/recipes/474088-tail-call-optimization-decorator/
  - https://chrispenner.ca/posts/python-tail-recursion
** discussion
  - https://www.reddit.com/r/Python/comments/96i85o/convenient_tail_call_elimination_decorator_for/

* python2 to python3
  $ 2to3 -w example.py [or directory]

  if you don't want to make backup files:
  $ 2to3 -wn example.py [or directory]

* Hy language
** emacs hy-mode
   https://github.com/hylang/hy-mode
*** install
**** hy
     - specific version
       $ python -m pip install hy==0.18.0
     - stable version(0.17.0): https://github.com/hylang/hy
       $ pip3 install hy
       or 
       $ pip3 install --user hy  # install scripts in /home/dhnam/.local/bin/
     - latest master version: https://docs.hylang.org/en/stable/quickstart.html
       $ pip install git+https://github.com/hylang/hy.git
**** jedhy
     https://github.com/ekaschalk/jedhy
     $ pip install jedhy  # it may be installed without virtual env (with base python)
*** note
**** tuple unpacking
     https://groups.google.com/forum/#!searchin/hylang-discuss/unpacking%7Csort:date/hylang-discuss/zk4Ck3fU4pA/F1gr4C09BAAJ
     (setv [x y z _ _] [1 2 3 4 5])
     (setv [a b #* rest] (range 5))
**** complex slicing
     https://groups.google.com/forum/m/#!topic/hylang-discuss/gDWb_sSD1CQ
     https://groups.google.com/forum/#!searchin/lisp-korea/hy%7Csort:date/lisp-korea/qgWO5jVNDmA/Bjl8NIdNAwAJ

     - Python
     >>> from numpy import *
     >>> a = arange(24).reshape(2,3,4)
     >>> a
     array([[[ 0,  1,  2,  3],
             [ 4,  5,  6,  7],
             [ 8,  9, 10, 11]],
     
            [[12, 13, 14, 15],
             [16, 17, 18, 19],
             [20, 21, 22, 23]]])
     >>> a[:,0,0]
     array([ 0, 12])
     >>> a[0,::-1, -1]
     array([11,  7,  3])
     >>>

     - Hy
     >>> (import [numpy [*]])
     >>> (setv a (.reshape (arange 24) 2 3 4))
     >>> (get a (, (slice None) 0 0))
     >>> (get a (, 0 (slice None None -1) -1))

* pip
** command
   $ python -m pip [command] [args]
** examples
   - version check
     https://stackoverflow.com/a/26664162/6710003
     $ python -m pip install stanfordnlp==
   - install specified version
     $ python -m pip install stanfordnlp==0.2.0

* pdb
** pdb command
   $ python -m pdb example.py
   or
   $ pdb example.py  # this command requires pdb setup for different environments
** pdb setting for conda environments
   https://stackoverflow.com/questions/38346577/debuggin-with-pdb-within-a-conda-environment
   1. source activate py3
   2. find pdb path by "$ which pdb" for python2 or "$ which pdb3" for Python3
      ex) /usr/bin/pdb or /usr/bin/pdb3
   3. find python path by "$ which python"
      ex) /home/dhnam/bin/anaconda3/envs/py3/bin/python
   4. copy /usr/bin/pdb or pdb3 to /home/dhnam/bin/anaconda3/envs/py3/bin/pdb
   5. then open /home/dhnam/bin/anaconda3/envs/py3/bin/pdb
   6. change shebang
      ex) /home/dhnam/bin/anaconda3/envs/py3/bin/python

    in this example, pyvenv-workon should be applied for "py3"

* Other packages
** Spacy
   $ conda install -c conda-forge spacy  # spacy-2.2.3
   $ conda install -c conda-forge spacy-lookups-data  # spacy-lookups-data-0.2.0
   $ python -m spacy download en_core_web_sm  # en-core-web-sm-2.2.5

** NLTK
*** setup
    >>> import nltk
    >>> nltk.download('averaged_perceptron_tagger')  # pos_tag
    >>> nltk.download('wordnet')
    >>> nnltk.download('punkt')  # tokenizer

    or 

    $ echo -e "import nltk\nnltk.download('averaged_perceptron_tagger')\nnltk.download('wordnet')" | python
    $ echo -e "import nltk\nnltk.download('punkt')" | python
*** download path
    >>> import nltk
    >>> nltk.data.path

* IPython
** Convert ipython notebook file(.ipynb) to python file(.py)
   https://stackoverflow.com/a/37799207
   $ jupyter nbconvert --to script 'my-notebook.ipynb'

* Anaconda
** Install
   - run bash Anaconda-latest-Linux-x86_64.sh
     - install location: /home/dhnam/bin/anaconda3
   - append the following to .bashrc
     : export PATH="/home/dhnam/bin/anaconda3/bin:$PATH"
   - install pip
     https://stackoverflow.com/questions/41060382/using-pip-to-install-packages-to-anaconda-environment
     $ conda install pip
   - search specific version
     $ conda search spacy
   - install specific package
     $ conda install spacy=2.2.3

** Conda environment
*** Python 2
    conda create -n py2 python=2.7 anaconda
*** Python 3
    conda create -n py3 python=3.6 anaconda
*** Removing environments
    # https://stackoverflow.com/a/49128056/6710003
    conda env remove -n ENV_NAME

** Anaconda update
   conda install pytorch torchvision -c pytorch
