
;;; prelude import objects from itertools and make basic macros accessible
(hissp.basic.._macro_.prelude)

(progn
  ;; use operators
  
  ;; (define + operator..add)
  (.__setitem__ (globals) '+ operator..add)
  (.__setitem__ (globals) '* operator..mul))


;; macro cannot be used in progn
(alias op/ operator..)

(progn
  (print (op/#add 1 2)))

(progn
  ;; function definition
  (define func (lambda (x) x))
  (print (func (+ 10 10))))


;;; defmacro cannot be used in progn
(defmacro defun (name params body)
  `(define ,name (lambda ,params ,body)))

(defun make-tuple (: :* args)
  args)

(defun make-list (: :* args)
  (list args))

(print (make-tuple -10 (lambda (x) x) 10))
